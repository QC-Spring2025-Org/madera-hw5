from qiskit import QuantumRegister, ClassicalRegister, QuantumCircuit
from numpy import pi

qreg_q = QuantumRegister(3, 'q')
creg_c0 = ClassicalRegister(1, 'c0')
creg_c1 = ClassicalRegister(1, 'c1')
creg_c2 = ClassicalRegister(1, 'c2')
creg_c3 = ClassicalRegister(1, 'c3')
creg_c4 = ClassicalRegister(1, 'c4')
circuit = QuantumCircuit(qreg_q, creg_c0, creg_c1, creg_c2, creg_c3, creg_c4)

circuit.reset(qreg_q[0])
circuit.h(qreg_q[0])
circuit.measure(qreg_q[0], creg_c0[0])
circuit.reset(qreg_q[0])
circuit.h(qreg_q[0])
circuit.measure(qreg_q[0], creg_c1[0])
circuit.barrier(qreg_q[0])
circuit.x(qreg_q[0]).c_if(creg_c0, 1)
circuit.barrier(qreg_q[0])
circuit.h(qreg_q[0]).c_if(creg_c1, 1)
circuit.swap(qreg_q[0], qreg_q[1])
circuit.h(qreg_q[1])
circuit.reset(qreg_q[2])
circuit.measure(qreg_q[1], creg_c4[0])
circuit.reset(qreg_q[1])
circuit.h(qreg_q[2])
circuit.x(qreg_q[1])
circuit.measure(qreg_q[2], creg_c2[0])
circuit.h(qreg_q[1])
circuit.swap(qreg_q[1], qreg_q[2])
circuit.h(qreg_q[2]).c_if(creg_c2, 1)
circuit.measure(qreg_q[2], creg_c3[0])
# @columns [0,1,2,3,4,5,6,7,8,9,10,11,11,12,13,13,14,14,15,16,17,18]